# GH-Actions: .github/workflows/ci-cd.yml
---
name: CI/CD

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - main
      - testing

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # Use the branch name to select the environment
    environment: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Testing' }}
    env:
      PACKAGE_TAG: ${{ vars.PACKAGE_TAG }}
    outputs:
      image-ref: ghcr.io/${{ github.repository_owner }}/discord-ascii-art-bot:${{ vars.PACKAGE_TAG }}

    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          IMAGE_REF=ghcr.io/${{ github.repository_owner }}/discord-ascii-art-bot:${PACKAGE_TAG}
          docker build -f Dockerfile.prod -t $IMAGE_REF .
          docker push $IMAGE_REF
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  deploy-to-aca:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Testing' }}
    env:
      RG: discord-bots
      CA_ENV: discord-bots-aca-env
      APP_NAME: ${{ vars.CONTAINER_NAME }}
      IMAGE_REF: ${{ needs.build-and-push.outputs.image-ref }}
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container Apps
        run: |
          az containerapp up \
            --name $APP_NAME \
            --resource-group $RG \
            --environment $CA_ENV \
            --image $IMAGE_REF \
            --cpu 1 --memory 1.5Gi \
            --min-replicas 0 --max-replicas 1 \
            --env-vars \
               DISCORD_BOT_TOKEN="${{ secrets.DISCORD_BOT_TOKEN }}" \
               DISCORD_CLIENT_ID="${{ secrets.DISCORD_CLIENT_ID }}" \
               NODE_ENV="production" \
               TERM="xterm-256color" \
               COLORTERM="24bit" \
               FORCE_COLOR="1" \
            --ingress internal \
            --registry-server ghcr.io \
            --registry-username "${{ github.actor }}" \
            --registry-password "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
