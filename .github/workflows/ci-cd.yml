# GH-Actions: .github/workflows/ci-cd.yml
---
name: CI/CD

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - main
      - testing

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # Use the branch name to select the environment
    environment: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Testing' }}
    env:
      PACKAGE_TAG: ${{ vars.PACKAGE_TAG }}
    outputs:
      image-ref: ghcr.io/${{ github.repository_owner }}/discord-ascii-art-bot:${{ vars.PACKAGE_TAG }}

    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          IMAGE_REF=ghcr.io/${{ github.repository_owner }}/discord-ascii-art-bot:${PACKAGE_TAG}
          docker build -f Dockerfile.prod -t $IMAGE_REF .
          docker push $IMAGE_REF
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          # Your existing RG and Container App name
          resourceGroup: discord-bots
          containerAppName: ${{ vars.CONTAINER_NAME }}

          # Tell it to deploy your GHCR image + tag
          imageToDeploy: ghcr.io/${{ github.repository_owner }}/discord-ascii-art-bot:${{ vars.PACKAGE_TAG }}

          # Since this is GHCR (not ACR), provide registry creds
          acrUsername: ${{ github.actor }}
          acrPassword: ${{ secrets.GITHUB_TOKEN }}
