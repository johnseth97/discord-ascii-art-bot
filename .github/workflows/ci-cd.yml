# GH-Actions: .github/workflows/ci-cd.yml
---
name: CI/CD

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - main
      - testing

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # Use the branch name to select the environment
    environment: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Testing' }}
    outputs:
      image-ref: ghcr.io/${{ github.repository_owner }}/discord-ascii-art-bot:latest

    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          IMAGE_REF=ghcr.io/${{ github.repository_owner }}/discord-ascii-art-bot:latest
          docker build -f Dockerfile.prod -t $IMAGE_REF .
          docker push $IMAGE_REF
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-to-aci:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Testing' }}
    env:
      CONTAINER_NAME: ${{ vars.CONTAINER_NAME }}
      PACKAGE_TAG: ${{ vars.PACKAGE_TAG }}

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container Instances
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
          NODE_ENV: ${{ vars.NODE_ENV }}
        run: |
          # choose resource group & container name based on branch
            RESOURCE_GROUP="discord-bots"
            IMAGE_REF="ghcr.io/${{ github.repository_owner }}/discord-ascii-art-bot:${PACKAGE_TAG}"

          # delete previous
          echo "Deleting previous container... $CONTAINER_NAME"
          az container delete \
            --resource-group "$RESOURCE_GROUP" \
            --name "$CONTAINER_NAME" \
            --yes || true

          # create/update
          az container create \
            --resource-group "$RESOURCE_GROUP" \
            --name "$CONTAINER_NAME" \
            --image "$IMAGE_REF" \
            --os-type Linux \
            --cpu 1 \
            --memory 1.5 \
            --restart-policy OnFailure \
            --registry-login-server ghcr.io \
            --registry-username "${{ github.actor }}" \
            --registry-password "${{ secrets.GITHUB_TOKEN }}" \
            --environment-variables \
              DISCORD_BOT_TOKEN="$DISCORD_BOT_TOKEN" \
              DISCORD_CLIENT_ID="$DISCORD_CLIENT_ID" \
              NODE_ENV="production" \
              TERM="xterm-256color" \
              COLORTERM="24bit" \
              FORCE_COLOR="1"
        shell: bash
...
